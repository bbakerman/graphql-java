import java.text.SimpleDateFormat

plugins {
    id "com.jfrog.bintray" version "1.2"
}

apply plugin: 'java'

sourceCompatibility = 1.6
targetCompatibility = 1.6
def releaseVersion = System.properties.RELEASE_VERSION
version = releaseVersion ? releaseVersion : new SimpleDateFormat('yyyy-MM-dd\'T\'HH-mm-ss').format(new Date())
group = 'com.graphql-java'


subprojects {
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'antlr'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
    }

    dependencies {
        compile 'org.antlr:antlr4-runtime:4.5.1'
        compile 'org.slf4j:slf4j-api:1.7.12'
        antlr "org.antlr:antlr4:4.5.1"
        testCompile group: 'junit', name: 'junit', version: '4.11'
        testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
        testCompile 'org.codehaus.groovy:groovy-all:2.4.4'
        testCompile 'cglib:cglib-nodep:3.1'
        testCompile 'org.objenesis:objenesis:2.1'
    }

    task sourcesJar(type: Jar) {
        dependsOn classes
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

}

allprojects {

    tasks.withType(Javadoc) {
        exclude('**/antlr/**')
    }

    tasks.withType(JavaCompile) {
        doFirst {
            if (sourceCompatibility == '1.6' && System.env.JDK6_HOME != null) {
                options.bootClasspath = "$System.env.JDK6_HOME/jre/lib/rt.jar"
            }
        }
    }

    // all publish tasks depend on the build task
    tasks.withType(PublishToMavenRepository) {
        dependsOn build
    }
}




task wrapper(type: Wrapper) {
    gradleVersion = '3.2'
    distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}
