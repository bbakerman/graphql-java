#
# This resource bundle is used for the query validation code to produce i18n messages
#
# The keys have the format of rule class name and then message type within that.  Most rules
# will only have 1 or 2 message keys
#
# Please try and keep this sorted within rule class and use # between sections so the IDEA Ctrl-Alt-L reformat does not bunch
# them too tightly.
#
# REMEMBER - a single quote ' in MessageFormat means things that are never replaced within them
# so use 2 '' characters to make it one ' on output.  This will take for the form ''{0}''
#
#
# notes on the following two messages - they not the best i18n messages because it combines all the other i18n keys into a
# combined message and that is bad i18n practice - however until we refactor this (which is extensive) this is what we are doing
# {0} is the ValidationType, {1} is the sub message and {2} is the query path as a list
#
ValidationError.coveringMsg=Validation error of type {0}: {1} @ ''{2}''
ValidationError.coveringMsgNoPath=Validation error of type {0}: {1}
#
FieldsOnCorrectType.unknownField=Validation error of type {0} : Field ''{0}'' in type ''{1}'' is undefined
#
FragmentsOnCompositeType.invalidInlineTypeCondition=Inline fragment type condition is invalid, must be on Object/Interface/Union
FragmentsOnCompositeType.invalidFragmentTypeCondition=Fragment type condition is invalid, must be on Object/Interface/Union
#
KnownArgumentNames.unknownDirectiveArg=Unknown directive argument ''{0}''
KnownArgumentNames.unknownFieldArg=Unknown field argument ''{0}''
#
KnownDirectives.unknownDirective=Unknown directive ''{0}''
KnownDirectives.directiveNotAllowed=Directive ''{0}'' not allowed here
#
KnownFragmentNames.undefinedFragment=Undefined fragment ''{0}''
#
KnownTypeNames.unknownType=Unknown type ''{0}''
#
LoneAnonymousOperation.withOthers=Anonymous operation with other operations.
LoneAnonymousOperation.namedOperation=Operation ''{0}'' is following anonymous operation.
#
NoFragmentCycles.cyclesNotAllowed=Fragment cycles not allowed
#
NoUndefinedVariables.undefinedVariable=Undefined variable ''{0}''
#
NoUnusedFragments.unusedFragments=Unused fragment ''{0}''
#
NoUnusedVariables.unusedVariable=Unused variable ''{0}''
#
PossibleFragmentSpreads.inlineIncompatibleTypes=Fragment cannot be spread here as objects of type ''{0}'' can never be of type ''{1}''
PossibleFragmentSpreads.fragmentIncompatibleTypes=Fragment ''{0}'' cannot be spread here as objects of type ''{1}'' can never be of type ''{2}''
#
ProvidedNonNullArguments.missingFieldArg=Missing field argument ''{0}''
ProvidedNonNullArguments.missingDirectiveArg=Missing directive argument ''{0}''
#
ScalarLeafs.subSelectionOnLeaf=Sub selection not allowed on leaf type ''{0}'' of field ''{1}''
ScalarLeafs.subSelectionRequired=Sub selection required for type ''{0}'' of field ''{1}''
#
UniqueDirectiveNamesPerLocation.uniqueDirectives=Directives must be uniquely named within a location. The directive ''{0}'' used on a ''{1}'' is not unique.
#
UniqueOperationNames.oneOperation=There can be only one operation named ''{0}''
#
VariableDefaultValuesOfCorrectType.missingValue=Missing value for non null type
VariableDefaultValuesOfCorrectType.badDefault=Bad default value ''{0}'' for type ''{1}''
#
VariablesAreInputTypes.wrongType=Wrong type for a variable
#
VariableTypesMatchRule.unexpectedType=Variable type ''{0}'' does not match expected type ''{1}''
